apiVersion: apps/v1
kind: Deployment
metadata:
  name: exam-service
  namespace: ase-14
  labels: { app: exam-service }
spec:
  replicas: 1
  selector:
    matchLabels: { app: exam-service }
  template:
    metadata:
      labels: { app: exam-service }
    spec:
      containers:
        - name: app
          image: ghcr.io/agile-software-engineering-25/team-14-backend-examination-office:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: DB_HOST
              valueFrom: { configMapKeyRef: { name: exam-db-config, key: DB_HOST } }
            - name: DB_PORT
              valueFrom: { configMapKeyRef: { name: exam-db-config, key: DB_PORT } }
            - name: DB_NAME
              valueFrom: { configMapKeyRef: { name: exam-db-config, key: DB_NAME } }
            - name: DB_USER
              valueFrom: { secretKeyRef: { name: exam-db-config, key: POSTGRES_USER } }
            - name: DB_PASSWORD
              valueFrom: { secretKeyRef: { name: exam-db-config, key: POSTGRES_PASSWORD } }
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: "org.postgresql.Driver"
          startupProbe:
            httpGet: { path: /api/v1/actuator/health, port: 8080 }
            failureThreshold: 30
            periodSeconds: 5
          readinessProbe:
            httpGet: { path: /api/v1/actuator/health/readiness, port: 8080 }
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 6
          livenessProbe:
            httpGet: { path: /api/v1/actuator/health/liveness, port: 8080 }
            initialDelaySeconds: 90
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "300m"
              memory: "1Gi"

